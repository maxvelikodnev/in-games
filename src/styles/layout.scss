@use "./config.scss" as config;
:root {
	--container-save-space: 20px;
	--section-space: 80px;
	overflow-y: scroll;
	@media (max-width: config.$mbpT) {
		--section-space: 60px;
		--container-save-space: 32px;
	}
	@media (max-width: config.$mbpM) {
		--section-space: 40px;
		--container-save-space: 24px;
	}
}
.section-space {
	padding-top: var(--section-space);
}
.section-space-bottom, .section-space {
	padding-bottom: var(--section-space);
}
html {
	&.splash-will-animate, &.splash-is-animating, &:not(.is-initialised) {
		height: calc(var(--vh, 1vh) * 100);
		overflow-y: scroll;
		& body {
			height: calc(var(--vh, 1vh) * 100);
			overflow: hidden;
		}
	}
	background-color: var(--sf-main-bg);
}
html.scroll-lock-by-drawer {
	--scroll-width: 17px;
	overflow: hidden;
	&.is-mobile {
		--scroll-width: 0px;
	}
	padding-right: var(--scroll-width);
}
body {
	flex: 1 1 auto;
	display: flex;
	flex-direction: column;
	min-height: 100%;
}
body main {
	flex: 1 1 auto
}
.container {
	width: 100%;
	max-width: 1140px;
	margin: auto;
	padding-left: var(--container-save-space);
	padding-right: var(--container-save-space);
}

.flex-even {
	&__inner {
		display: flex;
		flex-wrap: wrap;
		justify-content: var(--justify-content);
		margin-left: calc(var(--row-gap, var(--gap, 0)) * -1);
		margin-top: calc(var(--column-gap, var(--gap, 0)) * -1);
	}
	&__item {
		flex: 0 0 var(--item-flex-basis);
		padding-left: var(--row-gap, var(--gap, 0));
		padding-top: var(--column-gap, var(--gap, 0));
	}
}